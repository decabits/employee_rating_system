{"version":3,"sources":["../src/utils.js"],"names":["parseTags","str","split","reduce","prev","curr","text","Object","assign","match","key","substr","trim","value","replace","tags","hasOwnProperty","Array","isArray"],"mappings":";;;;;;;AACO,MAAMA,SAAS,GAAIC,GAAD,IAAiB;AACxC,SAAOA,GAAG,CAACC,KAAJ,CAAU,OAAV,EAAmBC,MAAnB,CACL,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACd,QAAID,IAAI,CAACE,IAAL,KAAc,EAAlB,EAAsB;AACpB,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,EAAwB;AAC7BE,QAAAA,IAAI,EAAG,GAAEF,IAAI,CAACE,IAAK,KAAID,IAAK;AADC,OAAxB,CAAP;AAGD;;AACD,UAAMI,KAAK,GAAGJ,IAAI,CAACI,KAAL,CAAW,+BAAX,CAAd;;AACA,QAAI,CAACA,KAAL,EAAY;AACV,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,EAAwB;AAC7BE,QAAAA,IAAI,EAAED;AADuB,OAAxB,CAAP;AAGD;;AACD,UAAMK,GAAG,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASE,MAAT,CAAgB,CAAhB,EAAmBC,IAAnB,EAAZ;AACA,UAAMC,KAAK,GAAGJ,KAAK,CAAC,CAAD,CAAL,KAAaJ,IAAb,GAAoB,IAApB,GAA2BA,IAAI,CAACS,OAAL,CAAaL,KAAK,CAAC,CAAD,CAAlB,EAAuB,EAAvB,CAAzC;AACA,WAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,EAAwB;AAC7BW,MAAAA,IAAI,EAAER,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,IAAI,CAACW,IAAvB,EAA6B;AACjC,SAACL,GAAD,GAAO,CAACN,IAAI,CAACW,IAAL,CAAUC,cAAV,CAAyBN,GAAzB,CAAD,GACHG,KADG,GAEHI,KAAK,CAACC,OAAN,CAAcd,IAAI,CAACW,IAAL,CAAUL,GAAV,CAAd,IACA,CAAC,GAAGN,IAAI,CAACW,IAAL,CAAUL,GAAV,CAAJ,EAAoBG,KAApB,CADA,GAEA,CAACT,IAAI,CAACW,IAAL,CAAUL,GAAV,CAAD,EAAiBG,KAAjB;AAL6B,OAA7B;AADuB,KAAxB,CAAP;AASD,GAxBI,EAyBL;AACEE,IAAAA,IAAI,EAAE,EADR;AAEET,IAAAA,IAAI,EAAE;AAFR,GAzBK,CAAP;AA8BD,CA/BM","sourcesContent":["// @flow\nexport const parseTags = (str: string) => {\n  return str.split(/\\r?\\n/).reduce(\n    (prev, curr) => {\n      if (prev.text !== \"\") {\n        return Object.assign({}, prev, {\n          text: `${prev.text}\\n${curr}`,\n        });\n      }\n      const match = curr.match(/^@[a-zA-Z][a-zA-Z0-9_]*($|\\s)/);\n      if (!match) {\n        return Object.assign({}, prev, {\n          text: curr,\n        });\n      }\n      const key = match[0].substr(1).trim();\n      const value = match[0] === curr ? true : curr.replace(match[0], \"\");\n      return Object.assign({}, prev, {\n        tags: Object.assign({}, prev.tags, {\n          [key]: !prev.tags.hasOwnProperty(key)\n            ? value\n            : Array.isArray(prev.tags[key])\n            ? [...prev.tags[key], value]\n            : [prev.tags[key], value],\n        }),\n      });\n    },\n    {\n      tags: {},\n      text: \"\",\n    }\n  );\n};\n"],"file":"utils.js"}