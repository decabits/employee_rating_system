{"version":3,"sources":["../../src/plugins/ClientMutationIdDescriptionPlugin.js"],"names":["ClientMutationIdDescriptionPlugin","builder","hook","field","build","context","extend","scope","isMutationInput","fieldName","Self","description","name","isMutationPayload","args","isRootMutation","input"],"mappings":";;;;;;;IAGyBA,iC,GAAT,SAASA,iCAAT,CACdC,OADc,EAEd;AACAA,EAAAA,OAAO,CAACC,IAAR,CACE,qCADF,EAEE,CAACC,KAAD,EAA2BC,KAA3B,EAAkCC,OAAlC,KAA8C;AAC5C,UAAM;AAAEC,MAAAA;AAAF,QAAaF,KAAnB;AACA,UAAM;AACJG,MAAAA,KAAK,EAAE;AAAEC,QAAAA,eAAF;AAAmBC,QAAAA;AAAnB,OADH;AAEJC,MAAAA;AAFI,QAGFL,OAHJ;;AAIA,QACE,CAACG,eAAD,IACAC,SAAS,KAAK,kBADd,IAEAN,KAAK,CAACQ,WAHR,EAIE;AACA,aAAOR,KAAP;AACD;;AACD,WAAOG,MAAM,CACXH,KADW,EAEX;AACEQ,MAAAA,WAAW,EACT;AAFJ,KAFW,EAMV,aAAYR,KAAK,CAACS,IAAN,IAAc,EAAG,eAAcF,IAAI,CAACE,IAAK,GAN3C,CAAb;AAQD,GAvBH,EAwBE,CAAC,6BAAD,CAxBF;AA2BAX,EAAAA,OAAO,CAACC,IAAR,CACE,gCADF,EAEE,CAACC,KAAD,EAA2BC,KAA3B,EAAkCC,OAAlC,KAA8C;AAC5C,UAAM;AAAEC,MAAAA;AAAF,QAAaF,KAAnB;AACA,UAAM;AACJG,MAAAA,KAAK,EAAE;AAAEM,QAAAA,iBAAF;AAAqBJ,QAAAA;AAArB,OADH;AAEJC,MAAAA;AAFI,QAGFL,OAHJ;;AAIA,QACE,CAACQ,iBAAD,IACAJ,SAAS,KAAK,kBADd,IAEAN,KAAK,CAACQ,WAHR,EAIE;AACA,aAAOR,KAAP;AACD;;AACD,WAAOG,MAAM,CACXH,KADW,EAEX;AACEQ,MAAAA,WAAW,EACT;AAFJ,KAFW,EAMV,aAAYR,KAAK,CAACS,IAAN,IAAc,EAAG,eAAcF,IAAI,CAACE,IAAK,GAN3C,CAAb;AAQD,GAvBH,EAwBE,CAAC,6BAAD,CAxBF;AA2BAX,EAAAA,OAAO,CAACC,IAAR,CACE,qCADF,EAEE,CAACY,IAAD,EAAWV,KAAX,EAAkBC,OAAlB,KAA8B;AAC5B,UAAM;AAAEC,MAAAA;AAAF,QAAaF,KAAnB;AACA,UAAM;AACJG,MAAAA,KAAK,EAAE;AAAEQ,QAAAA;AAAF,OADH;AAEJL,MAAAA,IAFI;AAGJP,MAAAA;AAHI,QAIFE,OAJJ;;AAKA,QAAI,CAACU,cAAD,IAAmB,CAACD,IAAI,CAACE,KAAzB,IAAkCF,IAAI,CAACE,KAAL,CAAWL,WAAjD,EAA8D;AAC5D,aAAOG,IAAP;AACD;;AACD,WAAO,EACL,GAAGA,IADE;AAELE,MAAAA,KAAK,EAAEV,MAAM,CACXQ,IAAI,CAACE,KADM,EAEX;AACEL,QAAAA,WAAW,EACT;AAFJ,OAFW,EAMV,gDACCR,KAAK,CAACS,IACP,eAAcF,IAAI,CAACE,IAAK,GARd;AAFR,KAAP;AAaD,GAzBH,EA0BE,CAAC,6BAAD,CA1BF;AA4BD,C","sourcesContent":["// @flow\nimport type SchemaBuilder, { Plugin } from \"../SchemaBuilder\";\n\nexport default (function ClientMutationIdDescriptionPlugin(\n  builder: SchemaBuilder\n) {\n  builder.hook(\n    \"GraphQLInputObjectType:fields:field\",\n    (field: { name?: string }, build, context) => {\n      const { extend } = build;\n      const {\n        scope: { isMutationInput, fieldName },\n        Self,\n      } = context;\n      if (\n        !isMutationInput ||\n        fieldName !== \"clientMutationId\" ||\n        field.description\n      ) {\n        return field;\n      }\n      return extend(\n        field,\n        {\n          description:\n            \"An arbitrary string value with no semantic meaning. Will be included in the payload verbatim. May be used to track mutations by the client.\",\n        },\n        `Tweaking '${field.name || \"\"}' field in '${Self.name}'`\n      );\n    },\n    [\"ClientMutationIdDescription\"]\n  );\n\n  builder.hook(\n    \"GraphQLObjectType:fields:field\",\n    (field: { name?: string }, build, context) => {\n      const { extend } = build;\n      const {\n        scope: { isMutationPayload, fieldName },\n        Self,\n      } = context;\n      if (\n        !isMutationPayload ||\n        fieldName !== \"clientMutationId\" ||\n        field.description\n      ) {\n        return field;\n      }\n      return extend(\n        field,\n        {\n          description:\n            \"The exact same `clientMutationId` that was provided in the mutation input, unchanged and unused. May be used by a client to track mutations.\",\n        },\n        `Tweaking '${field.name || \"\"}' field in '${Self.name}'`\n      );\n    },\n    [\"ClientMutationIdDescription\"]\n  );\n\n  builder.hook(\n    \"GraphQLObjectType:fields:field:args\",\n    (args: {}, build, context) => {\n      const { extend } = build;\n      const {\n        scope: { isRootMutation },\n        Self,\n        field,\n      } = context;\n      if (!isRootMutation || !args.input || args.input.description) {\n        return args;\n      }\n      return {\n        ...args,\n        input: extend(\n          args.input,\n          {\n            description:\n              \"The exclusive input argument for this mutation. An object type, make sure to see documentation for this objectâ€™s fields.\",\n          },\n          `Adding a description to input arg for field '${\n            field.name\n          }' field in '${Self.name}'`\n        ),\n      };\n    },\n    [\"ClientMutationIdDescription\"]\n  );\n}: Plugin);\n"],"file":"ClientMutationIdDescriptionPlugin.js"}